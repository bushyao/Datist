.. log

20140429
======================

1、统一的UI界面

2、UI界面之间的交互

自定义，界面设计解决方案

1、解析流程，抽提节点参数和默认输出节点，生成XAML的界面逻辑(控件的逻辑关系)。

流程->XAML

2、VS修改XAML文件，合理布局，实现界面逻辑。

3、数据专家加载XAML，实现录入校验逻辑。

注：当参数修改之后，XAML如何升级?

多个数据展示界面之间的联动？假想的需求？？？---》某个控件内部实现，输出节点的内部机制？（GIS图层的属性表、NChart图元的数据表?）-->太复杂-->主推流程系统的应用--->输出节点的数据钻取的完善！！！

关键字对应关系？

报表<==>图形，高亮

A--->B

B--->A

如何激活？何时激活？

1、字符串的长度计算

2、正则表达式，括号匹配与在线验证

3、与GoogleEarth软件接口，生成KML文件，并打开

支持点、线、面图元文件的生成；

支持点、线、面样式的定义；

支持点、线、面分层细节控制；

【专业软件接口思路】流程生成文件，系统自动打开文件；有缝数据接口开发；不依赖专业软件，不会绑得太死。

模糊机制，说明字段的定义不能太简单

//RowID,ReadRowID

$SheetRowID

$RowID

1.只读取说明块；

2.不备份数据文件

3.自动追加   文件名与表单信息

文件名

字段名：    WorkBookName

取值：         $WorkBookName

表单名

字段名：    SheetName

取值：         $SheetName

4.可使用常量

表单行号

字段名：    SheetRowID

取值：         $SheetRowID

取值内存表行号

字段名：    RowID

取值：         $RowID

5.强制结束

6.补充空值

值向下复制（超越合并单元格）

1、JoGIS点、线、面图元，选中添加到空间数据源节点中；

2、空间数据源节点【NodePolygon】,选择性输出数据：点、线、面、所有

3、点图元，调用SQLite自定义函数，计算X、Y坐标；增加计算WKT点图元的（X，Y）坐标的函数，分别为WKTPointX、WKTPointY。

4、完善【内核】，物理表节点，输出SQL语句；物理表生成之后，通过SQL执行生成新的视图，但原有表的内容不变。

处理节点与节点之间的存在的中间结果问题。

5、FastReport报表输出为Excel表单，支持2003和2007以上两种格式；

6、完善【内核】，节点查看器增加是否显示窗口接口，控制输出窗口是否显示，应用于输出结果与输出文件之间的切换。

【空间数据接入思路】通过文件浏览窗口，向GIS数据源中追加图元。类JoGIS方式。

1、压缩数据库功能，删除所有非缓存节点的数据，并压缩数据库

2、空间数据源，理清空间数据源接入思路，给出两种接入方式：全文件接入与选中图元接入；

全文件接入方式，允许将多种格式的矢量文件，作为数据源接入流程中；

选中图元接入方式，通过打开文件，框选图元的方式，将图元要素加入到流程中；该方式支持GeoMAP地质图件；一入口整合了TatuGIS和GeoMAP支持的文件格式；

选中图元通过可视化方式操作，增加流程图元全视域显示；

3、WPF与WINFORM混合编程，缺点太多，修复了TatuGIS不能如愿加载、保存图元的Bug。

4、通过将WKT图元转化为WKB图元，提高了区块过滤（图元空间分析）的效率；9万个图元运算，查出面内1680个图元，耗时由原来2分40秒，降低到30秒。

GoogleEarth默认样式，存储

图标收集

空间数据源图标

空间数据源图元名称指定

将工程中所有配置文件，加载到工程中，可以手工删除BINX文件夹下有所有文件；

1、数据专家默认主题设置；

功能：重置布局切换到数据专家的主题；

修改BUG：主题的标题、图片重置不起作用；

2、合并数据节点(MergeNode)

功能：增加表达式模式合并两个数据源；区别以前的同名字段模式；

完善节点的运行检查，两个数据源检查、表达式为空检查、同名输出检查；

3、Filter类型Bug，赋值、取值过程中自动删除首尾空格；bug表现有输出字段验证中

4、MergeNode表达式应用，区块与点的合并

业务角度：井所属的区块？区块内有哪些井？

辟分字段功能扩展：接口？基类？

2014年4月18日

1、缓冲区分析；

将经纬度图元坐标变换到特定的高斯6度带坐标（公里网坐标），以米为单位，计算缓冲区，再次投影变换为经纬坐标。

2、GoogleEarth

增加WKTPoint、任意类型创建方式

3、点在多边形内，系统Bug完善

tatukgis对环形多边形处理功能有问题。

优化提速，点在多边形，先通过边界判断

1、累计SQLite自定义函数，累计耗时统计

TimingTestGlobe，用于函数优化，特别是对空间分析函数的优化，监测其耗时情况。

2、当前节点的字段修改后，对后续节点的影响

完善所有节点的运行前逻辑判断

新字段的是否重名？

新字段是否为空？

字段列中字段名不存在，删除它

3、面板的节点的系统提示。

节点等距排列，增强视觉效果

1、插件管理

程序集名及说明性文字

2、程序可读性

程序集重命名

节点重新分布

3、导出空间数据节点

输出空间数据，支持ArcGIS、AutoCAD、GML、GeoJSON、Google Earth、GPS、MapInfo等多种格式。

4、系统支持节点数据统计

Ctrl+单击 节点统计

1、系统设置，统一配置系统参数

是否保存密码；属性VS静态变属性存储

是否显示保存密码提示

2、自定义函数扩展

GetFileNameWithoutExtension

GetFileName

GetExtension

GetDirectoryName

LengthB

SubStrB

3、Excel智能解析，扩展函数

IsChinese

增加 字段名过程中，不能包含换行符

增加模板过程中，命名方式为“模板文件名+表单名”

4、智能解析节点完善

保存解析模板，便于Excel中打开设计

UI参数中，文件浏览、文件夹浏览等；扫描文件及目录下的所有文件

取消模板对文档目录及日志的验证

流程运行时，验证文档目录是否存在；

UI参数运行时，不验证文档目录；

注：导致自定义控件加载失败的原因，属性的初始化，先初始化为空

5、UI组件参数，序列化与反序列化实现

/// <summary>

/// 流程参数使用方式，属性中转方式实现

/// </summary>

/// <returns></returns>

public List<string> FileList()

{

if (EvalByUI && ShowShortParas)

{

var lst = new List<string>();

foreach (ShortParagram sp in ShortParas.Paras)

{

string[] ss = sp.ParaValue.Split(new[] { ';' }, StringSplitOptions.RemoveEmptyEntries);

foreach (var s in ss)

{

if (File.Exists(s))

{

var extension = Path.GetExtension(s);

if (extension != null && extension.ToLower() == ".wis")

{

lst.Add(s);

}

}

else if (Directory.Exists(s))

{

var tmplst = FileIO.GetFiles(s, new[] { ".wis" });

lst.AddRange(tmplst);

}

}

//lst.AddRange(ss);

}

return lst;

}

return FileList(FolderFiles);

}

ShortParas.EditorTypes = new List<Type> { typeof(BcFilePicker), typeof(BcFolderFilePicker), typeof(BcTextBox) };

1、节点编辑、流程属性（变量）完成后更新参数界面（观察者模式）

编辑完成

默认输出

2、UI编辑器，组合文本提示

ShortParas.HasStringFormat

3、扩展UI编辑器的支持

节点编辑器

文件选取

文件及文件夹选取

文本框，支持验证，自定义的函数

时间选取

复选框

有扩展UI编辑器的节点，

数据库、筛选

智能解析、WIS

4、修复节点模板编辑器设计布局的Bug

5、编辑器在屏幕中心显示； 增加 取消按键

系统中整体布局 取消--确定，取消在前，确定在后

6、浏览器在屏幕中心显示；

7、Sort编辑器，取消还保存的Bug；克隆类型的应用

8、F5  运行

F6  UI参数方式运行

Tabel结果，右键->赋值给全局变量

1、自定义函数

完善：

字符串列表，去除空串

增加：

短日期格式

短时间格式

点转化为WKT    ToWKTPoint

距离WKTLength

2、在WinForm窗口中，打开WPF窗口，只有ShowDialog可以进行编辑、修改

3、GoogleEarth软件接口编辑器，当类型修改时，不刷新分类样式类型下拉框的bug;

4、在某些节点中，如新列节点，存在多个可能文本的节点，不提供文本节点参数的UI参数方式，使用流程参数即可。

5、流程参数，新增标题、单位、提示属性

6、个人版界面解决方案

运行前清空界面

运行后加载界面（同名的界面文件，打包时界面文件）

同名界面保存，先删除所有Text值，再恢复

7、打包相对路径；

属性取值过程中不能出错，否则不能序列化。

克隆函数，带参数（子类型）

8、报表，取消运行不自动调整列宽，列宽不起作用的BUG

1、个人版交互框架

交互关键字，可以为了交互合成关键字

交互分组，组内、所有两种模式；当组别为空，指所有。

交互模式，高亮、视域同步…

2、数据浏览窗口、GIS窗口、图版，交互试验

3、NChart交互实现

1、为适应个人版的应用

修改浏览器接口，ViewData带参数执行

EvalByUI = false;

ShowMainMenu = true;

ShowToolStrip = true;

ShowStatusBar = true;

ShowProgressBar = true;

event EndEval EvalEvent 运行结束后，运行的事件

1、流程参数与节点参数共用一套框架

采用统一的接口机制；

统一的UI界面绘制框架

2、UI，新增下拉列表的组件；

3、UI界面，逻辑关系

界面逻辑有顺序的，上一步的选择会影响下一步参数设置的值域范围；

实现：

流程变量A  ->  组件的参数B（UI中显示的流程变量、节点变量）->  组件界面值的变化（事件） -> 执行后续（执行顺序，RunID）流程变量 C

4、控件事件只执行 指定的 【变量赋值】 节点

变量赋值 ---- 流程变量 ---- UI -----控件事件 ----  变量赋值

节点变量 ---- UI -----控件事件 ----  变量赋值

通过指定需要更新的 流程变量，具有很强的针对性。

1、Excel表单读取

先读取数据，后修改表的字段名称，优化读取表单，表单的字段名称的优化。

2、SQLIte字段名的标准化

命名规则：汉字、字母、数字

表单内字段名不重复

内存表重命名